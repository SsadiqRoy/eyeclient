<!DOCTYPE html>
html 
  head 
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width,initial-scale=1")
    link(rel="stylesheet", href="/assets/fontawesome/css/all.min.css")
    link(rel="stylesheet", href="/styles/css/form.css")
    title üçøEye Client - Dashboard | #{ext.title || ''}

  body(data-next=`${game && game.Links.length + 1  || 0}`)
    include ../externals/functions
    include ../externals/cards

    section.form.form-9
      h3.form__heading #{game ? 'Update' : 'New'} Game
      .center-element.marbin-b4(style='font-size: 1.6rem;')
        p= game && game.title || ''
      form#form-game
        .form-group
          label.label-basic(for="imdb-id") IMDB Id
          input#imdb-id.input-basic(type="text", name="imdb-id", placeholder="IMDB Id" value=`${game && game.imdbId || ''}`)
        .form-group
          label.label-basic(for="type") Media Type
          input#type.input-basic(type="email", name="type", placeholder="Media Type" value='game' disabled required)
        .form-group
          label.label-basic(for="title") Game Title
          input#title.input-basic(type="text", name="title", placeholder="Title" value=`${game && game.title || ''}` required)
        .form-group
          label.label-basic(for="year") Year
          input#year.input-basic(type="text", name="year", placeholder="Year" value=`${game && game.year || ''}`)
        .form-group
          label.label-basic(for="rated") Rated
          input#rated.input-basic(type="text", name="rated", placeholder="Rated" value=`${game && game.rated || ''}`)
        .form-group
          label.label-basic(for="released") released
          input#released.input-basic(type="date", name="released", placeholder="Released" value=`${game && unmergeDate(game.released).date   || ''}` required)
        .form-group
          label.label-basic(for="genre") genre
          input#genre.input-basic(type="text", name="genre", placeholder="Genre" value=`${game && game.genre || ''}`)
        .form-group
          label.label-basic(for="directors") directors
          input#directors.input-basic(type="text", name="directors", placeholder="Directors" value=`${game && game.directors || ''}`)
        .form-group
          label.label-basic(for="writers") writers
          input#writers.input-basic(type="text", name="writers", placeholder="Writers" value=`${game && game.writers || ''}`)
        .form-group
          label.label-basic(for="actors") actors
          input#actors.input-basic(type="text", name="actors", placeholder="Actors" value=`${game && game.actors || ''}`)
        .form-group
          label.label-basic(for="plot") plot
          textarea#plot.textarea-basic(type="text", name="plot", placeholder="Plot" required)= game && game.plot || '' 
        .form-group
          label.label-basic(for="poster") poster
          input#poster.input-basic(type="text", name="poster", placeholder="Poster" value=`${game && game.poster || ''}` required)
        .form-group
          label.label-basic(for="language") language
          input#language.input-basic(type="text", name="language", placeholder="Language" value=`${game && game.language || ''}`)
        .form-group
          label.label-basic(for="country") country
          input#country.input-basic(type="text", name="country", placeholder="country" value=`${game && game.country || ''}`)
        .form-group
          label.label-basic(for="runtime") runtime
          input#runtime.input-basic(type="text", name="runtime", placeholder="runtime" value=`${game && game.runtime || ''}`)
        .form-group
          label.label-basic(for="imdb-rating") IMDB Rating
          input#imdb-rating.input-basic(type="text", name="imdb-rating", placeholder="IMDB Rating" value=`${game && game.imdbRating || ''}`)
        .form-group
          label.label-basic(for="keywords") keywords
          input#keywords.input-basic(type="text", name="keywords", placeholder="keywords" value=`${game && game.keywords || ''}`)
        
        if(game)
          .margin-t2.btn-double
            button.btn.btn-primary-alt#soft-update(type='button') Soft Update
            button.btn.btn-primary#update-game Hard Update
          
          .btn-center(style="margin-top: 8rem")
            a(href=`/executive/game/about?id=${game.id}`)
              button.btn.btn-primary(style='margin-right: 1rem;' type='button') Game About

        if(!game)
          .margin-t2.btn-center
            button.btn.btn-primary#add-game Save Game
    
    if(game)
      .btn-center(style="margin-top: 12rem")
        button.btn.btn-secondary#new-link Add New Link
        //- button.btn.btn-secondary-alt Add New Link
      
      section.links#cards-container
        each link in game.Links
          - const ext = link.resolution < 1000 && link.resolution > 10 ? 'p' : '';
          //- - const redirect = `/executive/season/${link.id}`
          +dlinkCard(link, undefined, ext)
      

      section.popup#link-popup.display-off
        .popup__container.form-7
          .popup__heading
            span
            h3 Add / Update Game Link
            i.fas.fa-times.close-popup
            
          .popup__content
            form#form-link
              .form-group
                label.label-basic(for="name") name
                input#name.input-basic(type="text", name="name", placeholder="name" value='part 1')
              .form-group
                label.label-basic(for="position") position
                input#position.input-basic(type="number", name="position", placeholder="position" step='1.0' min='1' value=`${game.Links.length + 1}`)
              .form-group
                label.label-basic(for="link") link
                input#link.input-basic(type="text", name="link", placeholder="link")
              
              .btn-center.display-off
                button.btn.btn-primary-alt#btn-link save
              
          .popup__bottom
            .btn-center
              button.btn.btn-primary.btn-full#btn-link-alt save

  script(src=`/javascript/${ext.js}.js`)
  //- script.
    function fullOpenPopup (elementid, popupid, afterclose, beforeopen){
      const elem = document.getElementById(elementid)
      const popup = document.getElementById(popupid)

      elem.addEventListener('click', (e)=>{
        if(beforeopen) beforeopen()
        popup.classList.toggle('display-off')
      })

      popup.addEventListener('click', (ev)=>{
        if(!ev.target.classList.contains('close-popup')) return 
        popup.classList.toggle('display-off')
        if(afterclose) afterclose()
      })
    }

    fullOpenPopup('new-link', 'link-popup')

    //- const resolution = document.getElementById('resolution')
    //- const otherName = document.getElementById('group-other')
    //- resolution.addEventListener('change', ()=>{
    //-   const {value} = resolution
    //-   if(value === 'other') return otherName.classList.remove('display-off')
    //-   otherName.classList.add('display-off')
    //- })